import os
import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = str(Path(__file__).parent.parent.parent)
if project_root not in sys.path:
    sys.path.append(project_root)

from aiogram import Router, types
from aiogram.filters import Command
from config import TIER_TO_CHANNEL, BOT_TOKEN, ADMIN_IDS
from aiogram import Bot

router = Router()
logger = logging.getLogger(__name__)

@router.message(Command("check_bot"))
async def check_bot_rights(message: types.Message):
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–∞—Ö
    –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")
        return

    bot = Bot(token=BOT_TOKEN)
    results = []

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        results.append(f"ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\nID: {bot_info.id}\nUsername: @{bot_info.username}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª
        for tier, channel_id in TIER_TO_CHANNEL.items():
            try:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
                chat = await bot.get_chat(channel_id)
                results.append(f"\nüì¢ –ö–∞–Ω–∞–ª {tier}:\nID: {chat.id}\nTitle: {chat.title}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
                bot_member = await bot.get_chat_member(channel_id, bot_info.id)
                results.append(f"–ü—Ä–∞–≤–∞ –±–æ—Ç–∞: {bot_member.status}")

                # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å—Å—ã–ª–∫—É
                try:
                    invite_link = await bot.create_chat_invite_link(
                        chat_id=channel_id,
                        member_limit=1,
                        creates_join_request=False
                    )
                    results.append(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫: –î–æ—Å—Ç—É–ø–Ω–æ\n–ü—Ä–∏–º–µ—Ä: {invite_link.invite_link}")
                except Exception as e:
                    results.append(f"‚ùå –°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–æ–∫: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n–û—à–∏–±–∫–∞: {str(e)}")

            except Exception as e:
                results.append(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∞–Ω–∞–ª–∞ {tier}:\n{str(e)}")

    except Exception as e:
        results.append(f"\n‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:\n{str(e)}")
    finally:
        await bot.session.close()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    await message.answer("\n".join(results))

# –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    print("–≠—Ç–æ—Ç —Ñ–∞–π–ª –Ω–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.")
    print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ bot_main.py –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.") 